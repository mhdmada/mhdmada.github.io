// if you want to use sass this is good
@import "compass/reset";
@import "compass/css3";

//////////////////////////
// BASIC SETTINGS //
//////////////////////////

body {
	color: #333;
	text-align: center;
	font-family: 'Roboto', sans-serif;
	background: #f7f7f7;
}

h1{
	font-size: 2.25em;
	padding: 0 1em;
	font-style: italic;
}

a {
	text-decoration: none;
}

img {
	max-width: 100%;
	height: auto;
}

ion-icon {
	font-size: 25px; // icon size
}

.gap {
	padding: 1em 0 0;
}

.padDown{
	padding: .5em 0em .5em ;
}

// outer and inner allows vertical alignment
.outer{
	padding: 20px;
	text-align: center;
	overflow-x: hidden;
}

.inner{
	display: inline-block;
	padding: 40px;
}

// make the avatar a circle
.avatar {
	@include box-shadow(0 0 0px 3px #fff, 0 0 0 4px #ccc, 0 4px 6px #333);
	@include border-radius(100px); // half the avatar size
	width: 200px;
	height: 200px;
}

/////////////////////////////
// ANIMATION CODE 		   //
/////////////////////////////

// Animation for image and text
.loadanimation {
	animation: 1s ease-in-out both fadeInRight;
}

@keyframes fadeInRight {
	0% {
		opacity: 0;
		-webkit-transform: translateX(300px);
	}
	100% {
		opacity: 1;
		-webkit-transform: translateX(0);
	}
}

// tiles with hyperlinks will simply fade in order
.tile {
	animation: .4s ease-in-out both fade-in;
}

// delay through 6 items
@for $i from 1 through 6 {
	.tile {
		&:nth-child(#{$i}) {
			animation-delay: 1.2 + $i * (.15s); //delay increases per loop
		}
	}
}

/* TODO At the moment, transforming will break the hover code*/
@keyframes fade-in {
	0% {
		opacity: 0;
	}
	100% {
		opacity: 1;
	}
}

// Hover code animation, button scales
.social {
	li {
		position: relative;
		@include inline-block();
		margin: .5em;
		@include transition(all .15s ease);

		&:hover {
			@include scale(1.25);
			color: white;
			//-webkit-animation: 0; //disable keyframes
		}

		&:before {
			position: absolute;
			width: 2em; /* center align technique, give width, negative half margin */
			margin-left: -1em;
			top: 1.5em;
			left: 50%;
		}

		a {
			display: block;
			color: inherit;
			padding: 1em 1em 1em;
			width: 6em;
			// allow truncation if needed
			overflow: hidden;
			white-space: nowrap;
			text-overflow: ellipsis;
		}
	}
}

// Colours for each of the buttons
.icon-resume {color: #e95950}
.icon-resume:hover {background:#e95950}

.icon-email {color: #004f9f}
.icon-email:hover {background:#004f9f}

.icon-github {color: #333}
.icon-github:hover {background:#333}

.icon-linkedin {color: #0077b5}
.icon-linkedin:hover {background:#0077b5}

.icon-instagram {color: #cd486b}
.icon-instagram:hover {background:#cd486b}

.icon-transcript {color: #ff7700}
.icon-transcript:hover {background:#ff7700}

// Text evolving feature
#spin {
  color:red;
}

#spin:after {
  content:"";
  animation: spin 2.5s linear infinite;
}

@keyframes spin {
  0% { content: "HTML5"; }
  10% { content: "CSS"; }
  20% { content: "Java"; }
  30% { content: "Python"; }
  40% { content: "Node.Js"; }
  50% { content: "JavaScript"; }
  60% { content: "PHP"; }
  70% { content: "VB.Net"; }
  80% { content: "React"; }
  90% { content: "C"; }
  100% { content: "SQL"; }
}